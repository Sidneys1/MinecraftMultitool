<Application
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:entities="clr-namespace:StackingEntities.Model.Entities"
    mc:Ignorable="d" x:Class="StackingEntities.App"
             StartupUri="View/Windows/MainWindow.xaml">
    <Application.Resources>
        <Style x:Key="Header1Style" TargetType="{x:Type Label}">
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontFamily" Value="Segoe UI Light"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect BlurRadius="3" RenderingBias="Quality" ShadowDepth="0" Opacity="0.5"/>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="Header2Style" TargetType="{x:Type Label}">
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
        </Style>
        <!--<DataTemplate x:Key="MobItemTemplate" DataType="entities:EntityBase">
            <Grid MaxHeight="150" d:DesignWidth="339">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Image Grid.RowSpan="2" MaxHeight="75" Width="75" Margin="3" Source="{Binding DisplayImage}" Stretch="None" >
                    <Image.Effect>
                        <DropShadowEffect Opacity="0.75" RenderingBias="Quality" ShadowDepth="0"/>
                    </Image.Effect>
                </Image>
                <TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding Type}" TextTrimming="CharacterEllipsis" Margin="3" FontSize="16"/>
                <TextBlock Grid.Column="1" Grid.Row="2" Text="{Binding Display}" TextTrimming="CharacterEllipsis" TextWrapping="Wrap" Margin="3" FontSize="12"/>
                <Image Grid.Row="0" Grid.Column="1" Width="20" Height="20" Source="/StackingEntities;component/Images/Delete.png" Margin="0,-5,-5,0" HorizontalAlignment="Right" VerticalAlignment="Top" Style="{DynamicResource ImageButton2}" />
            </Grid>
        </DataTemplate>-->
        <!--<Style x:Key="ImageButton" TargetType="{x:Type Image}"/>
        <Style x:Key="ImageButton2" TargetType="{x:Type Image}">
            <Setter Property="FlowDirection" Value="LeftToRight"/>
        </Style>-->

        <Style TargetType="Label">
            <Setter Property="FontFamily" Value="/StackingEntities;component/Fonts/#pixelmix"/>
            <Setter Property="FontSize" Value="9pt"/>
            <!--<Setter Property="SnapsToDevicePixels" Value="True"/>-->
            <!--<Setter Property="TextOptions.TextRenderingMode" Value="Aliased"/>-->
            <!--<Setter Property="TextOptions.TextFormattingMode" Value="Display"/>-->
        </Style>

        <Style x:Key="ExpanderHeaderFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border>
                            <Rectangle Margin="0" SnapsToDevicePixels="true" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True" UseLayoutRounding="True">
                            <Grid Background="Transparent">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Image x:Name="icon" RenderOptions.BitmapScalingMode="NearestNeighbor" Margin="2" Cursor="Hand" Source="Images/ExpanderClosed.png" Stretch="None" SnapsToDevicePixels="True" UseLayoutRounding="True"/>
                                <ContentPresenter Grid.Column="1" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"
                                                  />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Source" TargetName="icon" Value="Images/ExpanderOpen.png"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type Expander}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HeaderTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <ContentPresenter TextBlock.FontSize="12pt" TextBlock.FontFamily="/StackingEntities;component/Fonts/#pixelmix" SnapsToDevicePixels="True" TextOptions.TextRenderingMode="Aliased" Content="{TemplateBinding Content}" VerticalAlignment="Center"/>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Expander}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3" SnapsToDevicePixels="true">
                            <DockPanel>
                                <ToggleButton x:Name="HeaderSite"  ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" Content="{TemplateBinding Header}" DockPanel.Dock="Top" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" MinWidth="0" MinHeight="0" Padding="{TemplateBinding Padding}" Style="{StaticResource ExpanderDownHeaderStyle}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <ContentPresenter x:Name="ExpandSite" DockPanel.Dock="Bottom" Focusable="false" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </DockPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="true">
                                <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <SolidColorBrush x:Key="Button.Static.Border" Color="Black"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="Black"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="Black"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="Black"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <VisualBrush x:Key="Button.Static.Background" Viewport="0,0,60,60" ViewportUnits="Absolute" TileMode="Tile">
            <VisualBrush.Visual>
                <Image  RenderOptions.BitmapScalingMode="NearestNeighbor" Source="/StackingEntities;component/Images/ButtonBackEnabled.bmp" />
            </VisualBrush.Visual>
        </VisualBrush>
        <VisualBrush x:Key="Button.MouseOver.Background" Viewport="0,0,60,60" ViewportUnits="Absolute" TileMode="Tile">
            <VisualBrush.Visual>
                <Image  RenderOptions.BitmapScalingMode="NearestNeighbor" Source="/StackingEntities;component/Images/ButtonBackHover.bmp" />
            </VisualBrush.Visual>
        </VisualBrush>
        <VisualBrush x:Key="Button.Disabled.Background" Viewport="0,0,60,60" ViewportUnits="Absolute" TileMode="Tile">
            <VisualBrush.Visual>
                <Image  RenderOptions.BitmapScalingMode="NearestNeighbor" Source="/StackingEntities;component/Images/ButtonBackDisabled.bmp" />
            </VisualBrush.Visual>
        </VisualBrush>
        <TransformGroup x:Key="TransformGroup">
            <ScaleTransform/>
            <SkewTransform/>
            <RotateTransform/>
            <TranslateTransform X="1" Y="1"/>
        </TransformGroup>
        <Style TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="FontFamily" Value="/StackingEntities;component/Fonts/#pixelmix"/>
            <Setter Property="FontSize" Value="12pt"/>
            <Setter Property="UseLayoutRounding" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <Border BorderThickness="2,2,0,0" BorderBrush="#8CFFFFFF">
                                <Border BorderThickness="0,0,2,3" BorderBrush="#8C000000" Margin="-2,-2,0,0">
                                    <Grid x:Name="Grid">
                                        <TextBlock x:Name="contentPresenterDS" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Text="{TemplateBinding Content}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              TextOptions.TextRenderingMode="Aliased" Foreground="#C0000000" TextOptions.TextFormattingMode="Display">
                                            <TextBlock.RenderTransform>
                                                <TranslateTransform X="2" Y="2"/>
                                            </TextBlock.RenderTransform>
                                        </TextBlock>
                                        <TextBlock x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Text="{TemplateBinding Content}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              TextOptions.TextRenderingMode="Aliased" TextOptions.TextFormattingMode="Display"/>
                                    </Grid>
                                </Border>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Grid" Property="RenderTransform" Value="{StaticResource TransformGroup}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>
