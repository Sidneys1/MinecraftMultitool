<Application
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:items="clr-namespace:StackingEntities.Model.Items;assembly=StackingEntities.Data"
    xmlns:controls="clr-namespace:StackingEntities.Desktop.View.Controls"
	xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
    xmlns:viewModel="clr-namespace:StackingEntities.Desktop.ViewModel"
	xmlns:objects="clr-namespace:StackingEntities.Model.Objects;assembly=StackingEntities.Data"
	xmlns:enums="clr-namespace:StackingEntities.Model.Enums;assembly=StackingEntities.Data"
	xmlns:simpleTypes="clr-namespace:StackingEntities.Model.Objects.SimpleTypes;assembly=StackingEntities.Data"
	mc:Ignorable="d" x:Class="StackingEntities.Desktop.App"
    StartupUri="View/Windows/MainWindow.xaml">
	<Application.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="MinecraftStyle.xaml"/>
			</ResourceDictionary.MergedDictionaries>

			<Style x:Key="DataGridTextColumnStyle"  TargetType="{x:Type TextBox}">
				<Setter Property="TextWrapping" Value="Wrap"/>
				<Setter Property="AcceptsReturn" Value="True"/>
			</Style>
			<Style TargetType="{x:Type CheckBox}">
				<Setter Property="VerticalAlignment" Value="Center"/>
				<Setter Property="Margin" Value="3"/>
			</Style>
			<Style x:Key="YesNoInheritCheckbox" TargetType="{x:Type CheckBox}" BasedOn="{StaticResource {x:Type CheckBox}}">
				<Style.Triggers>
					<Trigger Property="IsChecked" Value="True">
						<Setter Property="Content" Value="Yes"/>
					</Trigger>
					<Trigger Property="IsChecked" Value="False">
						<Setter Property="Content" Value="No"/>
					</Trigger>
					<Trigger Property="IsChecked" Value="{x:Null}">
						<Setter Property="Content" Value="Inherit"/>
					</Trigger>
				</Style.Triggers>
			</Style>
			
			<!-- Data Templates -->
			<DataTemplate DataType="{x:Type items:Item}">
				<controls:ItemControl/>
			</DataTemplate>

			<DataTemplate DataType="{x:Type objects:Attribute}">
				<Expander IsExpanded="False" Header="Attribute Options">
					<Grid Margin="15,0,0,0">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto"/>
							<ColumnDefinition Width="*"/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="Auto"/>
						</Grid.RowDefinitions>

						<Label Content="Type"/>
						<ComboBox Grid.Row="0" Grid.Column="1" Margin="3" ItemsSource="{Binding Source={viewModel:Enumeration {x:Type enums:AttributeType}}}"
						  DisplayMemberPath="Description"
						  SelectedValue="{Binding Name}"
						  SelectedValuePath="Value"/>

						<Label Grid.Row="1" Grid.Column="0" Content="Base Value"/>
						<xctk:DoubleUpDown Grid.Row="1" Grid.Column="1" Margin="3" Value="{Binding Base}" MinWidth="50" HorizontalAlignment="Left"/>

						<Expander Grid.Row="2" Grid.ColumnSpan="2" Grid.Column="0" Header="Modifiers" IsExpanded="False" Margin="15,0,0,0" FontSize="12" DataContext="{Binding Modifiers}">
							<controls:ItemListControl/>
						</Expander>
					</Grid>
				</Expander>
			</DataTemplate>

			<DataTemplate DataType="{x:Type objects:AttributeModifier}">
				<Expander IsExpanded="False" Header="Attribute Modifier Options">
					<Grid Margin="15,0,0,0">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto"/>
							<ColumnDefinition Width="*"/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="Auto"/>
						</Grid.RowDefinitions>
						<Label Content="Name"/>
						<TextBox Grid.Row="0" Grid.Column="1" Text="{Binding Name}" Margin="3"/>

						<Label Grid.Row="1" Grid.Column="0" Content="Amount"/>
						<xctk:DoubleUpDown Grid.Row="1" Grid.Column="1" Value="{Binding Amount}" Margin="3" MinWidth="50" HorizontalAlignment="Left"/>

						<Label Grid.Row="2" Grid.Column="0" Content="Operation"/>
						<ComboBox Grid.Row="2" Grid.Column="1" Margin="3" ItemsSource="{Binding Source={viewModel:Enumeration {x:Type enums:AttributeModifierOperation}}}"
						  DisplayMemberPath="Description"
						  SelectedValue="{Binding Operation}"
						  SelectedValuePath="Value"/>
					</Grid>
				</Expander>
			</DataTemplate>

			<DataTemplate DataType="{x:Type objects:VillagerRecipe}">
				<Expander IsExpanded="False" Header="Villager Trade Options">
					<Grid Margin="15,0,0,0">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto"/>
							<ColumnDefinition Width="*"/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="Auto"/>
						</Grid.RowDefinitions>

						<Label Content="Reward Experience"/>
						<CheckBox Grid.Row="0" Grid.Column="1" IsChecked="{Binding RewardExp}" Margin="3"/>

						<Label Grid.Row="1" Grid.Column="0" Content="Maxiumum Uses"/>
						<xctk:IntegerUpDown Grid.Row="1" Grid.Column="1" Value="{Binding MaxUses}" Minimum="0" Margin="3" MinWidth="50" HorizontalAlignment="Left"/>


						<Label Grid.Row="2" Grid.Column="0" Content="Current Uses"/>
						<xctk:IntegerUpDown Grid.Row="2" Grid.Column="1" Value="{Binding Uses}" Minimum="0" Margin="3" MinWidth="50" HorizontalAlignment="Left"/>

						<Label Grid.Row="3" Grid.Column="0" Content="Buy Two Items"/>
						<CheckBox x:Name="CheckBox"  Grid.Row="3" Grid.Column="1" IsChecked="{Binding TwoItems}" Margin="3"/>

						<controls:ItemControl Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="2" DataContext="{Binding BuyItem}"/>
						<controls:ItemControl Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="2" IsEnabled="{Binding IsChecked, ElementName=CheckBox}" DataContext="{Binding BuyItemB}"/>
						<controls:ItemControl Grid.Row="6" Grid.Column="0" Grid.ColumnSpan="2" DataContext="{Binding SellItem}"/>
					</Grid>
				</Expander>
			</DataTemplate>

			<DataTemplate DataType="{x:Type objects:PotionEffect}">
				<Expander IsExpanded="False" Header="{Binding Header, TargetNullValue=Potion Effect Options}">
					<Grid Margin="15,0,0,0">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto"/>
							<ColumnDefinition Width="*"/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="Auto"/>
						</Grid.RowDefinitions>

						<Label Content="Type"/>
						<ComboBox Grid.Row="0" Grid.Column="1" Margin="3" ItemsSource="{Binding Source={viewModel:Enumeration {x:Type enums:PotionEffectId}}}"
						  DisplayMemberPath="Description"
						  SelectedValue="{Binding Id}"
						  SelectedValuePath="Value"/>

						<Label Grid.Row="1" Grid.Column="0" Content="Level" ToolTip="0 = I, 1 = II, 11 = X, etc."/>
						<xctk:ByteUpDown Grid.Row="1" Grid.Column="1" Margin="3" Value="{Binding Amplifier}" MinWidth="50" HorizontalAlignment="Left" ToolTip="0 = I, 1 = II, 11 = X, etc."/>

						<Label Grid.Row="2" Grid.Column="0" Content="Duration (Ticks)"/>
						<xctk:IntegerUpDown Grid.Row="2" Grid.Column="1" Margin="3" Value="{Binding Duration}" Minimum="0" MinWidth="50" HorizontalAlignment="Left"/>

						<Label Grid.Row="3" Grid.Column="0" Content="From Beacon"/>
						<CheckBox Grid.Row="3" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Left" IsChecked="{Binding Ambient}"/>

						<Label Grid.Row="4" Grid.Column="0" Content="Show Particles"/>
						<CheckBox Grid.Row="4" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Left" IsChecked="{Binding ShowParticles}"/>
					</Grid>
				</Expander>
			</DataTemplate>

			<DataTemplate DataType="{x:Type objects:BookPage}">
				<ContentPresenter Content="{Binding Text}"/>
			</DataTemplate>

			<DataTemplate DataType="{x:Type objects:JsonTextElement}">
				<controls:JsonTextControl/>
			</DataTemplate>

			<DataTemplate DataType="{x:Type simpleTypes:SimpleString}">
				<Grid >
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto"/>
						<ColumnDefinition Width="*"/>
					</Grid.ColumnDefinitions>
					<Label Content="{Binding Name}"/>
					<TextBox Grid.Column="1" Text="{Binding Value}"/>
				</Grid>
			</DataTemplate>

			<DataTemplate DataType="{x:Type objects:Enchantment}">
				<Grid HorizontalAlignment="Left">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto"/>
						<ColumnDefinition/>
					</Grid.ColumnDefinitions>
					<Grid.RowDefinitions>
						<RowDefinition/>
						<RowDefinition/>
					</Grid.RowDefinitions>

					<Label Content="Type"/>
					<ComboBox Grid.Row="0" Grid.Column="1" Margin="3" ItemsSource="{Binding Source={viewModel:Enumeration {x:Type enums:EnchantmentId}}}"
					DisplayMemberPath="Description"
					SelectedValue="{Binding Type}"
					SelectedValuePath="Value"/>

					<Label Grid.Column="0" Grid.Row="1" Content="Level"/>
					<xctk:ShortUpDown Grid.Column="1" Grid.Row="1" Margin="3" MinWidth="100" Minimum="1" Value="{Binding Level}"/>
				</Grid>
			</DataTemplate>

			<DataTemplate DataType="{x:Type objects:MapDecoration}">
				<Grid HorizontalAlignment="Left">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto"/>
						<ColumnDefinition/>
					</Grid.ColumnDefinitions>
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto"/>
						<RowDefinition Height="Auto"/>
						<RowDefinition Height="Auto"/>
						<RowDefinition Height="Auto"/>
					</Grid.RowDefinitions>

					<Label Content="Name"/>
					<TextBox Grid.Row="0" Grid.Column="1" Text="{Binding Id}" Margin="3"/>

					<Label Grid.Row="1" Grid.Column="0" Content="Type"/>
					<ComboBox Grid.Row="1" Grid.Column="1" Margin="3" ItemsSource="{Binding Source={viewModel:Enumeration {x:Type enums:MapMarker}}}"
					DisplayMemberPath="Description"
					SelectedValue="{Binding MType}"
					SelectedValuePath="Value"/>

					<Label Grid.Column="0" Grid.Row="2" Content="Rotation"/>
					<xctk:DoubleUpDown Grid.Column="1" Grid.Row="2" Margin="3" MinWidth="100" Minimum="0" Maximum="360" Value="{Binding Rotation}"/>

					<Grid Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto"/>
							<ColumnDefinition Width="Auto"/>
							<ColumnDefinition/>
							<ColumnDefinition Width="Auto"/>
							<ColumnDefinition/>
						</Grid.ColumnDefinitions>
						<Label Content="Position"/>
						<Label Grid.Column="1" Content="X"/>
						<xctk:DoubleUpDown Grid.Column="2" Value="{Binding X}"/>
						<Label Grid.Column="3" Content="Z"/>
						<xctk:DoubleUpDown Grid.Column="4" Value="{Binding Z}"/>
					</Grid>
				</Grid>
			</DataTemplate>

			<DataTemplate DataType="{x:Type objects:BlockType}">
				<Grid HorizontalAlignment="Left">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto"/>
						<ColumnDefinition/>
					</Grid.ColumnDefinitions>

					<Label Content="Block ID"/>
					<TextBox Grid.Row="0" Grid.Column="1" Text="{Binding Id}" Margin="3" MinWidth="100"/>
				</Grid>
			</DataTemplate>

			<DataTemplate DataType="{x:Type objects:BannerPattern}">
				<Grid HorizontalAlignment="Left">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto"/>
						<ColumnDefinition/>
					</Grid.ColumnDefinitions>
					<Grid.RowDefinitions>
						<RowDefinition/>
						<RowDefinition/>
					</Grid.RowDefinitions>

					<Label Content="Color"/>
					<ComboBox Grid.Row="0" Grid.Column="1" Margin="3" ItemsSource="{Binding Source={viewModel:Enumeration {x:Type enums:Dyes}}}"
					DisplayMemberPath="Description"
					SelectedValue="{Binding Color}"
					SelectedValuePath="Value"/>

					<Label Grid.Column="0" Grid.Row="1" Content="Pattern"/>
					<ComboBox Grid.Row="1" Grid.Column="1" Margin="3" ItemsSource="{Binding Source={viewModel:Enumeration {x:Type enums:BannerPatternId}}}"
					DisplayMemberPath="Description"
					SelectedValue="{Binding Pattern}"
					SelectedValuePath="Value"/>
				</Grid>
			</DataTemplate>

			<!-- 
			TODO: Templates
				* Spawn Potential
		-->
		</ResourceDictionary>
	</Application.Resources>
</Application>
